{
  "name": "bootstrap-sass-loader",
  "description": "bootstrap-sass package for webpack",
  "main": "index.js",
  "version": "1.0.9",
  "loader": "index.loader.js",
  "keywords": [
    "bootstrap",
    "webpack",
    "sass"
  ],
  "author": {
    "name": "Justin Gordon",
    "email": "justin.gordon@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/shakacode/bootstrap-sass-loader/issues"
  },
  "dependencies": {},
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/shakacode/bootstrap-sass-loader.git"
  },
  "peerDependencies": {
    "bootstrap-sass": "*",
    "css-loader": "*",
    "sass-loader": "*",
    "style-loader": "*",
    "url-loader": "*",
    "file-loader": "*"
  },
  "scripts": {
    "test": "echo 'Please see README.md for test instructions'; exit 1;"
  },
  "readme": "bootstrap-sass-loader\n=================\n\nBootstrap configuration and loading package for webpack, using the npm packages `bootstrap-sass` and `sass-loader`.\n\nInstall from [bootstrap-sass-loader on npm](https://www.npmjs.com/package/bootstrap-sass-loader).\n\nIf you're looking for the less version, see [bootstrap-webpack](https://github.com/gowravshekar/bootstrap-webpack). This project\nis based on that version for less, with some minor differences, the main one being how the configuration file specifies\ntwo sass files for customization.\n\nIn a nutshell:\n\n1. You've got the sass-loader to process Sass files to CSS.\n2. The npm bootstrap-sass package places the bootstrap files in `/node_modules/bootstrap-sass/assets`.\n3. You could simply create your own sass file to pick up bootstrap from this location, and you could require the js\n   files here for the Bootstrap JavaScript code. See the [sass-loader](https://github.com/jtangelder/sass-loader) for\n   instructions on configuring the directories.\n4. Or you could use this loader and load a js file that configures Bootstrap.\n\nYou can find an example of using this:\n\n[shakacode/bootstrap-sass-loader-example](https://github.com/shakacode/bootstrap-sass-loader-example)\n\nNote, `bootstrap-sass` must be installed locally inside of `../node_modules` or a parent directories `node_modules`\ndirectory relative to the loaded config file.\n\nBootstrap Version\n---\nThe version of sass-bootstrap used is listed in peerDependencies, so you should be able to use whichever version you like.\n\nSimply specify that version of `bootstrap-sass` in your `package.json`, like this:\n\n    \"bootstrap-sass\": \"~3.3.1\"\n\n\nUsage\n-----\n\n### 1.a Complete Bootstrap\n\nTo use the complete bootstrap package including styles and scripts with the default settings:\n\n``` javascript\nrequire(\"bootstrap-sass-loader\");\n```\n\nThe disadvantage to using this setup is that you can't:\n\n1. Customize the bootstrap variables: [Bootstrap Customization](http://getbootstrap.com/customize/)\n2. You can't use the bootstrap variables for your own sass stylesheets.\n\n### 1.b Customized Bootstrap\n\n1. Copy the file `bootstrap-sass.config.js` to your project. You will specify the file path in the `require` statement.\n2. Open that file to customize the location of a file for any Bootstrap variable overrides (`preBootstrapCustomizations`\n   and `bootstrapCustomizations`, and your main Sass file that can depend on Bootstrap variables, plus your customizations.\n   Any of these 3 files are optional. You may also remove any Sass or Js modules that you don't need.\n\nNext, you should specify this as an entry point:\n\n```\nmodule.exports = {\n  entry: [\n    \"bootstrap-sass!./path/to/bootstrap-sass.config.js\"\n  ]\n```\n\nOr a dependency within a file, like you'd specify other webpack dependencies:\n\n```javascript\nrequire(\"bootstrap-sass!./path/to/bootstrap-sass.config.js\");\n```\n\n\n#### `bootstrap-sass.config.js`\n\nHere's a sample configuration file. The file included in the [bootstrap-sass-loader git repo](https://github.com/shakacode/bootstrap-sass-loader/blob/master/bootstrap-sass.config.js)\nhas many more options. The two customization files, `bootstrapCustomizations`\nand `mainSass` are optional.\n\n``` javascript\nmodule.exports = {\n  bootstrapCustomizations: \"./bootstrap-customizations.scss\",\n  mainSass: \"./main.scss\", // path to your main SASS file (optional)\n  verbose: true, // print out your custom files used\n  debug: false, // print out the full generated scss file\n  styleLoader: \"style-loader!css-loader!sass-loader\", // see example for the ExtractTextPlugin\n  scripts: {\n    // add every bootstrap script you need\n    'transition': true\n  },\n  styles: {\n    // add every bootstrap style you need\n    \"mixins\": true,\n\n    \"normalize\": true,\n    \"print\": true,\n\n    \"scaffolding\": true,\n    \"type\": true,\n  }\n};\n```\n\n### Font Configuration\nBootstrap use some fonts. You need to configure the correct loaders in your `webpack.config.js`.\n\nTake a look at example https://github.com/shakacode/react-webpack-rails-tutorial which uses custom fonts with the\nbootstrap-sass-loader. You'll need to create define a font-face like this:\n\n```scss\n@font-face {\n  font-family: 'OpenSans-Light';\n  src: url('assets/fonts/OpenSans-Light.ttf') format('truetype');\n}\n```\n\n### Example Loaders Configuration:\n\n``` javascript\nmodule.exports = {\n  module: {\n    loaders: [\n      // **IMPORTANT** This is needed so that each bootstrap js file required by\n      // bootstrap-webpack has access to the jQuery object\n      { test: /bootstrap\\/js\\//, loader: 'imports?jQuery=jquery' },\n\n      // Needed for the css-loader when [bootstrap-webpack](https://github.com/bline/bootstrap-webpack)\n      // loads bootstrap's css.\n      { test: /\\.woff(\\?v=\\d+\\.\\d+\\.\\d+)?$/,   loader: \"url?limit=10000&mimetype=application/font-woff\" },\n      { test: /\\.woff2(\\?v=\\d+\\.\\d+\\.\\d+)?$/,  loader: \"url?limit=10000&mimetype=application/font-woff\" },\n      { test: /\\.ttf(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: \"url?limit=10000&mimetype=application/octet-stream\" },\n      { test: /\\.eot(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: \"file\" },\n      { test: /\\.svg(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: \"url?limit=10000&mimetype=image/svg+xml\" }\n    ]\n  }\n};\n```\n\n## extract-text-plugin Notes\n* If you don't run webpack like this, you might get a very obscure error:\n```\nPATH=$(npm bin):$PATH webpack --config webpack.rails.config.js\n```\n\nAlternate, you can put $(npm bin) in your path. Basically if you run `type webpack` and the path is your global one, then\nyou may have issues.\n\n* You can configure the output file of the created CSS file by using a relative path to the output directory. For example:\n```\n  plugins: [\n    new ExtractTextPlugin(\"../stylesheets/bootstrap-and-customizations.css\")\n  ]\n```\n\n### Based on:\n* [bootstrap-webpack](https://github.com/bline/bootstrap-webpack).\n* DylanLukes/bootstrap-sass-webpack\n\n# Known Issues\n1. Automatic Dependency loading is currently problematic. If you \"touch\" either of the customization files listed in\n   your config file (bootstrapCustomizations, mainSass), then that will trigger a rebuild of the Sass files. This is a\n   known issue with the sass-loader. I work around this issue by \"touching\" one of the 3 sass config files.\n\n\nTesting Changes in the Bootstrap Sass Loader\n=======================================================\n1. See this article [Debugging NodeJs and Webpack Loaders](http://forum.railsonmaui.com/t/debugging-nodejs-and-webpack-loaders/142)\n2. Clone both this project and https://github.com/shakacode/bootstrap-sass-loader-example\n3. Use the npm link command per step #1 (see article)\n4. Be sure to run `npm i bootstrap-sass` in the directory where you have the `bootstrap-sass-loader`. This is because\n   the location of bootstap-sass is found relative to the `bootstrap-sass-loader` and if you linked it and it's not not\n   there, then you'll bet this error: \"Error: Could not find path to bootstrap-sass. Check to see that it's in a parent\n   directory of config file containing node_modules/bootstrap-sass\".\n\nThen in the bootstrap-sass-loader-example project:\n\n1. Make some changes in the loader, put in some print statements maybe, then run `gulp webpack` to invoke the loader.\n2. Then run `gulp build` and open the resulting file dist/index.html in the browser.\n3. Run `gulp test` to confirm the changes work.\n\n\nPull requests are welcome!\n\nFor more info see: http://www.railsonmaui.com and http://forum.railsonmaui.com.\n\nCode Inspection and ESLint\n======================================================\n1. If using Webstorm import the inspection file in /jetbrains-inspection and inspect all files\n2. Command line: `eslint .`\n\nPublishing to NPM\n======================================================\n1. Install the [release-it npm](https://github.com/webpro/release-it) program\n2. Merge fixes to master\n3. Run command `release-it`\n4. Take defaults, except for last one to publish changes (answer Y)\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/shakacode/bootstrap-sass-loader",
  "_id": "bootstrap-sass-loader@1.0.9",
  "_from": "bootstrap-sass-loader@"
}
